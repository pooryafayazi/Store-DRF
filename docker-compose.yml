
services:
  redis:
    container_name: redis-store
    image: redis:7.2.4
    restart: always
    ports:
      - 6379:6379    
    volumes:
      - redis_data:/data
    command: redis-server --save 60 1 --loglevel warning
  
  db:
    container_name: db-store
    image: postgres:17.2
    volumes:
      - ./postgres/data:/var/lib/postgresql/data/
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    expose:
      - "5432"
    ports:
      - "5432:5432"
    restart: always
  
  backend:
    container_name: backend-store
    build:    
      context: .
      dockerfile: ./dockerfiles/dev/django/Dockerfile
    volumes:
      - ./core:/usr/src/app
    working_dir: /usr/src/app
    # command: django-admin startproject core .
    command: python manage.py runserver 0.0.0.0:8000
    ports:
      - "8000:8000"    
    env_file:
      - .env
    restart: always
    depends_on:
      - db
      - redis

  worker:
    container_name: worker-store
    build:
      context: .
      dockerfile: ./dockerfiles/dev/django/Dockerfile
    # command: celery -A core worker -l INFO
    command: celery -A core worker --loglevel=info
    volumes:
      - ./core:/app
    environment:
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
    depends_on:
      - backend
      - redis

volumes:
  postgres_data:
  redis_data: